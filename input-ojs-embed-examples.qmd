---
title: "import, {ojs}, and embed examples in Quarto"
format: html
editor: visual
execute:
  echo: fenced
  message: false
  warning: false
---

The goal of this document is to explore and compare workflow options for people working in Observable and Quarto. Order doesn't imply any kind of ranking or preference.

Observable notebook: [https://observablehq.com/\@observablehq/test-observable-quarto](https://observablehq.com/@observablehq/test-observable-quarto)

## `import`

Within `{ojs}` cells in a .qmd, we can use [imports](https://observablehq.com/@observablehq/import) to access named cells from an Observable notebook:

```{ojs}
import {staticChart} from "@observablehq/testing-robservable"
```

```{ojs}
staticChart
```

Still to try:

-   Imports w/ inputs?

-   Import with?

## `{ojs}` cells

Write code directly in `{ojs}` cells:

```{ojs}
data = [{name: "Teddy", weight: 50},
             {name: "Khora", weight: 60},
             {name: "Waffle", weight: 35},
             {name: "Banjo", weight: 40},
             {name: "Tallie", weight: 55}]
```

```{ojs}
Plot.plot({
  marks: [
    Plot.barY(data, {x: "name", y: "weight", sort: {x: "y", reverse: true}}),
    Plot.ruleY([0])
  ]
})
```

### With an Input:

```{ojs}
viewof dogRadio = Inputs.radio(data.map(d => d.name), {label: "Select one:", value: "Teddy"})
```

```{ojs}
Plot.plot({
  marks: [
    Plot.barY(data, {x: "name", y: "weight", fill: d => d.name === dogRadio ? "red" : "#ccc", sort: {x: "y", reverse: true}}),
    Plot.ruleY([0])
  ]
})
```

### Using R / Py / etc. outputs (e.g. data frames) in `{ojs}` cells:

From Quarto documentation: " the `ojs_define()` function to make data processed in Python or R available to `{ojs}` cells."[^1]

[^1]: https://quarto.org/docs/interactive/ojs/data-sources.html

```{r}
# Create a new data frame with the same variable names: 
df = data.frame(name = c("Milo", "Otis", "Scout"), weight = c(20, 11, 42))
```

```{r}
ojs_define(ojs_df = df)
```

```{ojs}
Plot.plot({
  marks: [
    Plot.barY(transpose(ojs_df), {x: "name", y: "weight", sort: {x: "y", reverse: true}}),
    Plot.ruleY([0])
  ]
})
```

## Embeds

We can embed an iframe in a raw html code block:

```{{=html}}
<iframe width="100%" height="519" frameborder="0"
  src="https://observablehq.com/embed/@observablehq/test-observable-quarto@31?cells=viewof+dogRadio%2Cchart"></iframe>
```

```{=html}
<iframe width="100%" height="519" frameborder="0"
  src="https://observablehq.com/embed/@observablehq/test-observable-quarto@31?cells=viewof+dogRadio%2Cchart"></iframe>
```
